version: "2"
services:
  router:
    build: nginx-routing
    volumes:
      - ./ssl/certs:/etc/letsencrypt:ro
      - ./ssl/challenge-data:/var/www/certbot:ro

      - ./nginx-routing/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-routing/spammers.conf:/etc/nginx/spammers.conf:ro
      - ./nginx-routing/logs:/var/log/nginx

      - ./nginx-routing/static:/var/www/static
      - ./nginx-routing/gogle:/var/www/gogle
      - ./nginx-routing/illegalketaminestore/:/var/www/illegalketaminestore
      - ./trash:/var/www/trash:ro

      - ./hyperbolic-nomic/static:/var/www/static/hyperbolic-nomic
      - ./ilo-pi-ante-toki/static:/var/www/static/ilo-pi-ante-toki
      - ./mulambdati/static:/var/www/static/mulambdati
    ports:
      - "80:80"
      - "443:443"
    restart: on-failure
    init: true

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./ssl/certs:/etc/letsencrypt
      - ./ssl/challenge-data:/var/www/certbot
    init: true

  mulambdati:
    extends:
      file: mulambdati/docker-compose.yml
      service: mulambdati
    init: true

  citrons_server:
    extends:
      file: citrons-server/docker-compose.yml
      service: blattidus
    init: true

  ilo-pi-ante-toki:
    extends:
      file: ilo-pi-ante-toki/docker-compose.yml
      service: ilo-pi-ante-toki
    init: true

  breadquest_server:
    extends:
      file: breadquest-rl/docker-compose.yml
      service: breadquest_server
    init: true

  breadquest_rl:
    extends:
      file: breadquest-rl/docker-compose.yml
      service: breadquest_rl
    init: true
    depends_on:
      - breadquest_server

  nomic:
    build: hyperbolic-nomic
    volumes:
      - ./hyperbolic-nomic/:/usr/src/app
    ports:
      - "9080:9080"
    restart: on-failure
    init: true

